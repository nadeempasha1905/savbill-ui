var SSDSystem = SSDSystem || {};
SSDSystem.VerticalNavigation = function() {
};
SSDSystem.VerticalNavigation.prototype = {
	navigationIdentity : "#leftNavigation",
	isEmpty : function(thisValue) {
		if ($.isArray(thisValue)) {
			return (thisValue.length <= 0)
		} else {
			return (thisValue === "" || thisValue === null || typeof thisValue === "undefined")
		}
	},
	replaceHeading : function(thisHeading) {
		if (!this.isEmpty(thisHeading)) {
			$("h1#heading").html(thisHeading.trim())
		}
	},
	loadMyPage : function(pagename) {
		if (!this.isEmpty(pagename)) {
			
			document.getElementById("contentLeft").style.display = "none";
			
			//$("#contentRight").load(pagename); 
		}
	},
	leftNavigationActiveMain : function(thisLi) {
		thisLi.toggleClass("active").siblings().removeClass("active")
	},
	leftNavigationActiveSub : function(thisLi) {
		thisLi.addClass("active").siblings().removeClass("active")
				.closest("ul").closest("li").siblings().find("li").removeClass(
						"active");
		console.log(thisLi.text())
		console.log(thisLi,thisLi)
		var href = $("a",thisLi).attr('href');
		console.log('href',href)
		//this.replaceHeading(thisLi.text())
		if(href === "#"){
			alert("Page Not Added !!!");
			return;
		}else{
			this.loadMyPage(href)
		}
		
	},
	leftNavigationClick : function(thisParentUl, thisLi) {
		if (thisParentUl.is(this.navigationIdentity)) {
			this.leftNavigationActiveMain(thisLi)
		} else {
			this.leftNavigationActiveSub(thisLi)
		}
	},
	leftNavigation : function() {
		var self = this;
		console.log('self',self);
		$(document)
				.on(
						"click",
						self.navigationIdentity + " li a",
						function(event) {
							try {
								event.preventDefault();
								event.stopPropagation();
								var thisA = $(this), thisLi = thisA
										.closest("li"), thisParentUl = thisLi
										.closest("ul");
								self.leftNavigationClick(thisParentUl, thisLi)
							} catch (errorMessage) {
								console.log(errorMessage)
							}
						})
	},
	init : function(thisIdentity) {
		try {
			if (!this.isEmpty(thisIdentity)) {
				this.navigationIdentity = thisIdentity
			}
			this.leftNavigation()
		} catch (errorMessage) {
			console.log(errorMessage)
		}
	}
};